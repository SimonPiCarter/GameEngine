diff --git a/.gitignore b/.gitignore
index 391aec3..8a16208 100644
--- a/.gitignore
+++ b/.gitignore
@@ -11,6 +11,7 @@ bin/Data/DebugPack.zip
 bin/Data/resources2.cfg
 include/OgreCommon/
 src/OgreCommon/
+install/
 
 Dependencies/Ogre
 Dependencies/build_result/
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6bb68e2..4524d8b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -18,7 +18,7 @@
 cmake_minimum_required( VERSION 3.3 )
 project( ColibriGui )
 
-if( ${CMAKE_VERSION} VERSION_GREATER 3.9 AND NOT COLIBRIGUI_LIB_ONLY )
+if( ${CMAKE_VERSION} VERSION_GREATER 3.9 )
 	# We need to do this first, as OGRE.cmake will add another FindDoxygen.cmake file
 	# which is older than the system-provided one.
 	find_package(	Doxygen
@@ -26,25 +26,17 @@ if( ${CMAKE_VERSION} VERSION_GREATER 3.9 AND NOT COLIBRIGUI_LIB_ONLY )
 					OPTIONAL_COMPONENTS mscgen dia )
 endif()
 
-if( NOT COLIBRIGUI_LIB_ONLY )
-	set( EXECUTABLE_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}" )
+set( EXECUTABLE_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}" )
 
-	include( CMake/Bootstrap.cmake )
-	include( CMake/Dependencies/OGRE.cmake )
-else()
-	include( CMake/Bootstrap.cmake )
-endif()
+include( CMake/Bootstrap.cmake )
+include( CMake/Dependencies/OGRE.cmake )
 
 add_subdirectory( Dependencies )
 
-if( NOT COLIBRIGUI_LIB_ONLY )
-	setupOgre( OGRE_SOURCE, OGRE_BINARIES, OGRE_LIBRARIES )
-else()
-	include_directories( "${OGRE_SOURCE}/OgreMain/include" )
-	include_directories( "${OGRE_BINARIES}/include" )
-	include_directories( "${OGRE_SOURCE}/Components/Hlms/Common/include" )
-	include_directories( "${OGRE_SOURCE}/Components/Hlms/Unlit/include" )
-endif()
+include_directories( "${OGRE_SOURCE}/OgreMain/include" )
+include_directories( "${OGRE_BINARIES}/include" )
+include_directories( "${OGRE_SOURCE}/Components/Hlms/Common/include" )
+include_directories( "${OGRE_SOURCE}/Components/Hlms/Unlit/include" )
 
 # Setup our application
 include_directories( "./include" )
@@ -59,24 +51,8 @@ if( MSVC90 )
 	include_directories( "./Dependencies/MSVC_Fix" )
 endif()
 
-if( NOT COLIBRIGUI_LIB_ONLY )
-	#add_recursive( ./src SOURCES )
-	#add_recursive( ./include HEADERS )
-
-	#add_recursive( ./src/OgreCommon/System/OSX/*.mm SOURCES )
-
-	#add_recursive would have added all .mm files, including the ios ones.
-	#We need to be able to set specifics.
-	file(GLOB_RECURSE SOURCES "src/*.cpp")
-	file(GLOB_RECURSE HEADERS "include/*.h")
-	if( APPLE )
-		file(GLOB_RECURSE MMSOURCES "src/OgreCommon/System/OSX/*.mm")
-	endif()
-
-else()
-	add_recursive( ./src/ColibriGui SOURCES )
-	add_recursive( ./include/ColibriGui HEADERS )
-endif()
+add_recursive( ./src/ColibriGui SOURCES )
+add_recursive( ./include/ColibriGui HEADERS )
 
 if( APPLE )
 	set( CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD "c++11" )
@@ -99,14 +75,29 @@ if( NOT COLIBRIGUI_LIB_ONLY )
 		add_executable( ${PROJECT_NAME} WIN32 MACOSX_BUNDLE ${SOURCES} ${HEADERS} ${RESOURCES} )
 	endif()
 else()
-	add_library( ${PROJECT_NAME} STATIC ${SOURCES} ${HEADERS} )
+	add_library( ${PROJECT_NAME} STATIC)
+	target_sources(${PROJECT_NAME}
+		PUBLIC
+		${SOURCES}
+	)
+	target_include_directories(${PROJECT_NAME}
+		PUBLIC
+		"include"
+	)
 endif()
 
-target_link_libraries( ${PROJECT_NAME} icucommon ${HARFBUZZ_LIBRARIES} ${FREETYPE_LIBRARIES} ${ZLIB_LIBRARIES} )
-target_link_libraries( ${PROJECT_NAME} ${OGRE_LIBRARIES} )
+# SDL2
+find_package(SDL2 REQUIRED)
+
+target_link_libraries( ${PROJECT_NAME} PUBLIC icucommon ${HARFBUZZ_LIBRARIES} ${FREETYPE_LIBRARIES} ${ZLIB_LIBRARIES} )
+target_link_libraries( ${PROJECT_NAME} PUBLIC ${OGRE_LIBRARIES} ${SDL2_LIBRARIES})
 
+target_include_directories (${PROJECT_NAME}
+PUBLIC
+	${SDL2_INCLUDE_DIRS}
+)
 if( UNIX )
-	target_link_libraries( ${PROJECT_NAME} dl )
+	target_link_libraries( ${PROJECT_NAME} PUBLIC dl )
 endif()
 
 if( APPLE )
@@ -125,6 +116,28 @@ if( APPLE )
 
 endif()
 
+setupOgre( OGRE_SOURCE, OGRE_BINARIES, OGRE_LIBRARIES )
+
+file(GLOB_RECURSE SOURCES_EXE "src/OgreCommon/*.cpp")
+
+add_executable(exe WIN32 MACOSX_BUNDLE
+	src/ColibriGui.cpp
+	src/ColibriGuiGameState.cpp
+	${SOURCES_EXE}
+)
+
+target_include_directories(exe
+	PRIVATE
+	"include/OgreCommon"
+)
+
+target_link_libraries(exe
+	PRIVATE
+	${PROJECT_NAME}
+	${OGRE_LIBRARIES}
+)
+
+
 if( ${CMAKE_VERSION} VERSION_GREATER 3.9 )
 	if( DOXYGEN_FOUND )
 		set( DOXYGEN_EXTRACT_ALL NO )
diff --git a/src/ColibriGui.cpp b/src/ColibriGui.cpp
index bfb25b3..a995584 100644
--- a/src/ColibriGui.cpp
+++ b/src/ColibriGui.cpp
@@ -295,7 +295,7 @@ namespace Demo
             #else
                 mResourcePath = "../Data/";
             #endif
-			mAlwaysAskForConfig = false;
+			mAlwaysAskForConfig = true;
 
             //It's recommended that you set this path to:
             //	%APPDATA%/ColibriGui/ on Windows
diff --git a/src/ColibriGui/ColibriWidget.cpp b/src/ColibriGui/ColibriWidget.cpp
index 603bea4..849fc73 100644
--- a/src/ColibriGui/ColibriWidget.cpp
+++ b/src/ColibriGui/ColibriWidget.cpp
@@ -4,6 +4,8 @@
 
 #include "ColibriGui/ColibriManager.h"
 
+#include <iostream>
+
 #define TODO_account_rotation
 
 namespace Colibri
@@ -623,9 +625,9 @@ namespace Colibri
 	//-------------------------------------------------------------------------
 	bool Widget::intersects( const Ogre::Vector2 &posNdc ) const
 	{
-		COLIBRI_ASSERT_MEDIUM( !m_transformOutOfDate );
 		TODO_account_rotation;
-		return !( posNdc.x < m_derivedTopLeft.x ||
+		return !m_transformOutOfDate &&
+				!( posNdc.x < m_derivedTopLeft.x ||
 				  posNdc.y < m_derivedTopLeft.y ||
 				  posNdc.x > m_derivedBottomRight.x ||
 				  posNdc.y > m_derivedBottomRight.y );
diff --git a/src/ColibriGui/ColibriWindow.cpp b/src/ColibriGui/ColibriWindow.cpp
index 3eefd75..af1efe5 100644
--- a/src/ColibriGui/ColibriWindow.cpp
+++ b/src/ColibriGui/ColibriWindow.cpp
@@ -148,45 +148,53 @@ namespace Colibri
 	{
 		bool cursorFocusDirty = false;
 
-		TODO_should_flag_transforms_dirty; //??? should we?
 		const Ogre::Vector2 pixelSize = m_manager->getPixelSize();
 
-		const Ogre::Vector2 maxScroll = getMaxScroll();
-
-		if( m_nextScroll.y < 0.0f )
-		{
-			m_nextScroll.y = Ogre::Math::lerp( 0.0f, m_nextScroll.y,
-											   exp2f( -15.0f * timeSinceLast ) );
-		}
-		if( m_nextScroll.y > maxScroll.y )
-		{
-			m_nextScroll.y = Ogre::Math::lerp( maxScroll.y, m_nextScroll.y,
-											   exp2f( -15.0f * timeSinceLast ) );
-		}
-		if( m_nextScroll.x < 0.0f )
-		{
-			m_nextScroll.x = Ogre::Math::lerp( 0.0f, m_nextScroll.x,
-											   exp2f( -15.0f * timeSinceLast ) );
-		}
-		if( m_nextScroll.x > maxScroll.x )
+		if(hasScroll())
 		{
-			m_nextScroll.x = Ogre::Math::lerp( maxScroll.x, m_nextScroll.x,
-											   exp2f( -15.0f * timeSinceLast ) );
-		}
+			TODO_should_flag_transforms_dirty; //??? should we?
 
-		if( fabs( m_currentScroll.x - m_nextScroll.x ) >= pixelSize.x ||
-			fabs( m_currentScroll.y - m_nextScroll.y ) >= pixelSize.y )
-		{
-			m_currentScroll = Ogre::Math::lerp( m_nextScroll, m_currentScroll,
+			const Ogre::Vector2 maxScroll = getMaxScroll();
+
+			if( m_nextScroll.y < 0.0f )
+			{
+				m_nextScroll.y = Ogre::Math::lerp( 0.0f, m_nextScroll.y,
 												exp2f( -15.0f * timeSinceLast ) );
+			}
+			if( m_nextScroll.y > maxScroll.y )
+			{
+				m_nextScroll.y = Ogre::Math::lerp( maxScroll.y, m_nextScroll.y,
+												exp2f( -15.0f * timeSinceLast ) );
+			}
+			if( m_nextScroll.x < 0.0f )
+			{
+				m_nextScroll.x = Ogre::Math::lerp( 0.0f, m_nextScroll.x,
+												exp2f( -15.0f * timeSinceLast ) );
+			}
+			if( m_nextScroll.x > maxScroll.x )
+			{
+				m_nextScroll.x = Ogre::Math::lerp( maxScroll.x, m_nextScroll.x,
+												exp2f( -15.0f * timeSinceLast ) );
+			}
+
+			if( fabs( m_currentScroll.x - m_nextScroll.x ) >= pixelSize.x ||
+				fabs( m_currentScroll.y - m_nextScroll.y ) >= pixelSize.y )
+			{
+				m_currentScroll = Ogre::Math::lerp( m_nextScroll, m_currentScroll,
+													exp2f( -15.0f * timeSinceLast ) );
 
-			const Ogre::Vector2& mouseCursorPosNdc = m_manager->getMouseCursorPosNdc();
-			if( this->intersects( mouseCursorPosNdc ) )
-				cursorFocusDirty = true;
+				const Ogre::Vector2& mouseCursorPosNdc = m_manager->getMouseCursorPosNdc();
+				if( this->intersects( mouseCursorPosNdc ) )
+					cursorFocusDirty = true;
+			}
+			else
+			{
+				m_currentScroll = m_nextScroll;
+			}
 		}
 		else
 		{
-			m_currentScroll = m_nextScroll;
+			m_currentScroll = Ogre::Vector2::ZERO;
 		}
 
 		WindowVec::const_iterator itor = m_childWindows.begin();
diff --git a/src/ColibriGuiGameState.cpp b/src/ColibriGuiGameState.cpp
index 1b96e07..8b049ac 100644
--- a/src/ColibriGuiGameState.cpp
+++ b/src/ColibriGuiGameState.cpp
@@ -302,6 +302,11 @@ namespace Demo
 			innerOverlapWindow2->setTransform( Ogre::Vector2(20, 20), Ogre::Vector2(100, 100) );
 			innerOverlapWindow2->setZOrder(4);
 
+			Colibri::Button * test_l = colibriManager->createWidget<Colibri::Button>( innerOverlapWindow1  );
+			test_l->getLabel()->setText( "test" );
+			test_l->setTransform( Ogre::Vector2(0, 0), Ogre::Vector2(100, 100) );
+			test_l->setZOrder(1);
+
 			innerOverlapButton1 = colibriManager->createWidget<Colibri::Button>( overlapWindow2 );
 			innerOverlapButton1->getLabel()->setText( "First" );
 			innerOverlapButton1->setTransform( Ogre::Vector2(150, 10), Ogre::Vector2(100, 100) );
@@ -319,106 +324,6 @@ namespace Demo
 			innerToggleOrder->sizeToFit();
 		}
 
-#if 0
-		//Colibri::LayoutLine *layout = new Colibri::LayoutLine( colibriManager );
-		Colibri::LayoutMultiline *layout = new Colibri::LayoutMultiline( colibriManager );
-		//Colibri::LayoutTableSameSize *layout = new Colibri::LayoutTableSameSize( colibriManager );
-
-		layout->m_numLines = 2;
-		//layout->m_numColumns = 3;
-		//layout->m_transpose = false;
-		//layout->m_softMaxSize = mainWindow->getSizeAfterClipping();
-		//layout->m_evenMarginSpaceAtEdges = false;
-
-		//layout->m_vertical = false;
-
-		for( int i=0 ;i<4; ++i )
-		{
-			button1 = colibriManager->createWidget<Colibri::Button>( mainWindow );
-			button1->setTopLeft( Ogre::Vector2( 192, 192 + 192 + 480 + i * 480 ) );
-			//button1->setSize( i == 1 ? Ogre::Vector2( 288, 180 ) : Ogre::Vector2( 96, 54 ) );
-			button1->setSize( Ogre::Vector2( 288, 180 ) );
-			button1->getLabel()->setText( "Button " + Ogre::StringConverter::toString( i ) );
-
-			//button1->setState( Colibri::States::Disabled );
-
-			/*button1->m_proportion[0] = 1;
-			button1->m_proportion[1] = 1;*/
-			/*button1->m_expand[0] = true;
-			button1->m_expand[1] = true;*/
-
-			//layout->addCell( &Colibri::LayoutSpacer::c_DefaultBlankSpacer );
-			//layout->addCell( new Colibri::LayoutSpacer() );
-			button1->m_margin = Ogre::Vector2( 38 );
-			//button1->m_gridLocation = Colibri::GridLocations::BottomRight;
-			//button1->m_gridLocation = Colibri::GridLocations::TopRight;
-			//button1->m_gridLocation = Colibri::GridLocations::Top;
-			//button1->m_gridLocation = Colibri::GridLocations::TopLeft;
-			//button1->m_gridLocation = Colibri::GridLocations::Center;
-			layout->addCell( button1 );
-		}
-
-		//layout->addCell( &Colibri::LayoutSpacer::c_DefaultBlankSpacer );
-
-		layout->layout();
-#endif
-
-#if 0
-		Colibri::Label *label = colibriManager->createWidget<Colibri::Label>( mainWindow );
-		label->setText( "The path of the righteous man is beset on all sides by the iniquities\n"
-						"of the selfish and the tyranny of evil men. Blessed is he who, in the\n"
-						"name of charity and good will, shepherds the weak through the valley \n"
-						"of darkness, for he is truly his brother's keeper and the finder of \n"
-						"lost children. And I will strike down upon thee with great vengeance \n"
-						"and furious anger those who would attempt to poison and destroy My \n"
-						"brothers. And you will know My name is the Lord when I lay My \n"
-						"vengeance upon thee." );
-		/*label->setText( "The path of the righteous man is beset on all sides by the iniquities "
-						"of the selfish and the tyranny of evil men. Blessed is he who, in the "
-						"name of charity and good will, shepherds the weak through the valley "
-						"of darkness, for he is truly his brother's keeper and the finder of "
-						"lost children. And I will strike down upon thee with great vengeance "
-						"and furious anger those who would attempt to poison and destroy My "
-						"brothers. And you will know My name is the Lord when I lay My "
-						"vengeance upon thee." );*/
-//		label->setText( "The path of the righteous man is beset on all sides by the iniquities "
-//						"of the selfish and the tyranny of evil men. Blessed is he who, in the" );
-		//label->setText( "The path of the righteous man is beset on all sides by the iniquities" );
-		//label->setText( "\tHola qué tal?\t\tHola2\n  Hola qué tal?\tHola2\n" );
-		//label->setText( "H\nH" );
-		//label->setText( "\tHola\t\tQ\nQue Tal\nHola2\nHola3" );
-		//label->setText( "懶惰的姜貓懶惰的姜貓懶惰97\t的姜貓懶惰的姜貓懶惰的姜貓Hola\n懶惰的姜貓Hello\n懶惰的姜貓" );
-		//label->setText( "H\tH" );
-		//label->setText( "aaa\naaa\n\naga\nagaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" );
-		//label->setText( "Hello\t\tTest\nHello2\t\tTest" );
-		//label->setText( "\tHello\n    asd" );
-		//label->setText( "من أنا لاستجواب أولئك الذين يكتبونh\nola" );
-//		label->setText( "من أنا لاستجواب ""\n\r"
-//						"أولئك الذين يكتبونhola" );
-		{
-			/*std::ifstream file( "/home/matias/Desktop/Text2", std::ios::in|std::ios::binary );
-			file.seekg( 0, std::ios::end );
-			const size_t fileSize = file.tellg();
-			file.seekg( 0, std::ios::beg );
-			std::string text;
-			text.resize( fileSize );
-			file.read( &text[0], fileSize );*/
-			//label->setText( text );
-			//label->setText( "Hola\nQue tal sin paragraph?" );
-			//label->setText( "Hola\u2029\nQue tal?" );
-			//label->setText( "تجوستجوستجThisتجوستجوستج is a ستجو word ستجوستجوستجوستج" );
-			//label->setText( "الذي يحيي ذكرى احتجاجات مواطنين فلسطينيين من مدن" );
-		}
-		//label->setTextHorizAlignment( Colibri::TextHorizAlignment::Left );
-//		label->setTextVertAlignment( Colibri::TextVertAlignment::Center );
-		//label->setTextHorizAlignment( Colibri::TextHorizAlignment::Left );
-		//label->setText( "The path of the righteous man is beset on all sides by" );
-		label->setSize( mainWindow->getSizeAfterClipping() );
-		//label->setVertReadingDir( Colibri::VertReadingDir::ForceTTBLTR );
-//		label->sizeToFit( Colibri::States::Idle, 0.5f,
-//						  Colibri::TextHorizAlignment::Center, Colibri::TextVertAlignment::Center );
-		label->setShadowOutline( true, Ogre::ColourValue::Black, Ogre::Vector2( 1.0f ) );
-#endif
 		mainWindow->sizeScrollToFit();
 
 		TutorialGameState::createScene01();
